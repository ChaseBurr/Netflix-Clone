{"version":3,"sources":["axios.js","Components/Row/Row.jsx","requests.js","Components/Banner/Banner.js","Components/Navbar/Navbar.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","rowNumber","Math","floor","random","useEffect","a","get","data","results","fetchData","className","onClick","document","querySelector","scrollLeft","map","movie","poster_path","MovieTrailer","original_title","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","handleClick","src","backdrop_path","alt","name","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","process","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","req","length","style","backgroundSize","backgroundImage","original_name","overview","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f7922e6.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Base url to make requests to the database\nconst instance = axios.create({\n   baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./../../axios\";\nimport YouTube from \"react-youtube\";\nimport MovieTrailer from \"movie-trailer\";\nimport \"./Row.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n   const [movies, setMovies] = useState([]);\n   const [trailerUrl, setTrailerUrl] = useState(\"\");\n   let rowNumber = Math.floor(Math.random() * 100);\n\n   useEffect(() => {\n      async function fetchData() {\n         const { data } = await axios.get(fetchUrl);\n         setMovies(data.results);\n      }\n      fetchData();\n   }, [fetchUrl]);\n\n   const opts = {\n      height: \"800\",\n      width: \"100%\",\n      playerVars: {\n         autoplay: 1,\n      },\n   };\n\n   const handleClick = (movie) => {\n      // Close trailer when click movie again\n      if (trailerUrl) {\n         setTrailerUrl(\"\");\n      } else {\n         MovieTrailer(movie?.original_title || \"\")\n            .then((url) => {\n               const urlParams = new URLSearchParams(new URL(url).search);\n               setTrailerUrl(urlParams.get(\"v\"));\n            })\n            .catch((error) => console.error(error));\n      }\n   };\n\n   return (\n      <div className=\"row\">\n         {/* Title */}\n         <h2>{title}</h2>\n\n         {/* Container -> posters */}\n         <div className={`row__posters row_${rowNumber}`}>\n            <button\n               className={\n                  isLargeRow ? \"slide__left slide__left__large\" : \"slide__left\"\n               }\n               onClick={() => {\n                  document.querySelector(`.row_${rowNumber}`).scrollLeft -= 200;\n               }}\n            >\n               <i className=\"fas fa-arrow-left\"></i>\n            </button>\n\n            {/* Posters */}\n            {movies.map(\n               (movie) =>\n                  movie.poster_path && (\n                     <img\n                        key={movie.id}\n                        onClick={() => handleClick(movie)}\n                        className={`row__poster${\n                           isLargeRow ? \" row__poster__large\" : \"\"\n                        }`}\n                        src={`${base_url}${\n                           isLargeRow ? movie.poster_path : movie.backdrop_path\n                        }`}\n                        alt={movie.name}\n                     />\n                  )\n            )}\n            <button\n               className={\n                  isLargeRow\n                     ? \"slide__right slide__right__large\"\n                     : \"slide__right\"\n               }\n               onClick={() => {\n                  document.querySelector(`.row_${rowNumber}`).scrollLeft += 500;\n               }}\n            >\n               <i className=\"fas fa-arrow-right\"></i>\n            </button>\n         </div>\n         {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n      </div>\n   );\n}\n\nexport default Row;\n","let API_KEY = process.env.REACT_APP_API_KEY;\n\nconst requests = {\n   fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n   fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n   fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=-en-US`,\n   fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n   fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n   fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n   fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n   fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./../../axios\";\nimport requests from \"./../../requests\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n   const [movie, setMovie] = useState([]);\n\n   useEffect(() => {\n      async function fetchData() {\n         const req = await axios.get(requests.fetchNetflixOriginals);\n         setMovie(\n            req.data.results[\n               Math.floor(Math.random() * req.data.results.length - 1)\n            ]\n         );\n         return req;\n      }\n      fetchData();\n   }, []);\n\n   function truncate(str, n) {\n      return str?.lengt > n ? str.substr(0, n - 1) + \"...\" : str;\n   }\n\n   return (\n      <header\n         className=\"banner\"\n         style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n         }}\n      >\n         <div className=\"banner__contents\">\n            {/* title */}\n            <h1 className=\"banner__title\">\n               {movie?.title || movie?.name || movie?.original_name}\n            </h1>\n\n            {/* Buttons */}\n            <div className=\"banner_buttons\">\n               <button className=\"banner__button\">Play</button>\n               <button className=\"banner__button\">My List</button>\n            </div>\n\n            {/* Descriptions */}\n            <h1 className=\"banner__description\">{movie?.overview}</h1>\n         </div>\n         <div className=\"banner__fadeBottom\"></div>\n      </header>\n   );\n}\n\nexport default Banner;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n   const [show, handleShow] = useState(false);\n\n   useEffect(() => {\n      window.addEventListener(\"scroll\", () => {\n         if (window.scrollY > 100) {\n            handleShow(true);\n         } else handleShow(false);\n      });\n      return () => {\n         window.removeEventListener(\"scroll\");\n      };\n   }, []);\n   return (\n      <nav className={`${show && \"nav__black\"}`}>\n         <img\n            className=\"nav__logo\"\n            src=\"https://cdn.worldvectorlogo.com/logos/netflix-3.svg\"\n            alt=\"Netflix Logo\"\n         />\n         <img\n            className=\"nav__avatar\"\n            src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\n            alt=\"Profile Avatar\"\n         />\n      </nav>\n   );\n}\n\nexport default Navbar;\n","// React Imports\nimport React from \"react\";\n\n// CSS imports\nimport \"./App.css\";\n\n// Component imports\nimport { Row, Banner, Navbar } from \"./Components/exports\";\n\n// request import\nimport requests from \"./requests\";\n\n// App Component\nfunction App() {\n   return (\n      <div className=\"app\">\n         {/* Nav */}\n         <Navbar />\n\n         {/* Banner */}\n         <Banner />\n\n         {/* Rows */}\n         <Row\n            title=\"NETFLIX ORIGINALS\"\n            fetchUrl={requests.fetchNetflixOriginals}\n            isLargeRow\n         />\n         <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n         <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n         <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n         <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n         <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n         <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n         <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n      </div>\n   );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}