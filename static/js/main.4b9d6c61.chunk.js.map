{"version":3,"sources":["axios.js","Components/Row/Row.jsx","requests.js","Components/Banner/Banner.js","Components/Navbar/Navbar.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","rowNumber","Math","floor","random","useEffect","a","get","data","results","fetchData","className","onClick","document","querySelector","scrollLeft","map","movie","poster_path","MovieTrailer","original_title","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","handleClick","src","backdrop_path","alt","name","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","process","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","req","length","style","backgroundSize","backgroundImage","original_name","overview","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4b9d6c61.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// Base url to make requests to the database\r\nconst instance = axios.create({\r\n   baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./../../axios\";\r\nimport YouTube from \"react-youtube\";\r\nimport MovieTrailer from \"movie-trailer\";\r\nimport \"./Row.css\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n   const [movies, setMovies] = useState([]);\r\n   const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n   let rowNumber = Math.floor(Math.random() * 100);\r\n\r\n   useEffect(() => {\r\n      async function fetchData() {\r\n         const { data } = await axios.get(fetchUrl);\r\n         setMovies(data.results);\r\n      }\r\n      fetchData();\r\n   }, [fetchUrl]);\r\n\r\n   const opts = {\r\n      height: \"800\",\r\n      width: \"100%\",\r\n      playerVars: {\r\n         autoplay: 1,\r\n      },\r\n   };\r\n\r\n   const handleClick = (movie) => {\r\n      // Close trailer when click movie again\r\n      if (trailerUrl) {\r\n         setTrailerUrl(\"\");\r\n      } else {\r\n         MovieTrailer(movie?.original_title || \"\")\r\n            .then((url) => {\r\n               const urlParams = new URLSearchParams(new URL(url).search);\r\n               setTrailerUrl(urlParams.get(\"v\"));\r\n            })\r\n            .catch((error) => console.error(error));\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"row\">\r\n         {/* Title */}\r\n         <h2>{title}</h2>\r\n\r\n         {/* Container -> posters */}\r\n         <div className={`row__posters row_${rowNumber}`}>\r\n            <button\r\n               className={\r\n                  isLargeRow ? \"slide__left slide__left__large\" : \"slide__left\"\r\n               }\r\n               onClick={() => {\r\n                  document.querySelector(\r\n                     `.row_${rowNumber}`\r\n                  ).scrollLeft -= 1000;\r\n               }}\r\n            >\r\n               <i className=\"fas fa-arrow-left\"></i>\r\n            </button>\r\n\r\n            {/* Posters */}\r\n            {movies.map(\r\n               (movie) =>\r\n                  movie.poster_path && (\r\n                     <img\r\n                        key={movie.id}\r\n                        onClick={() => handleClick(movie)}\r\n                        className={`row__poster${\r\n                           isLargeRow ? \" row__poster__large\" : \"\"\r\n                        }`}\r\n                        src={`${base_url}${\r\n                           isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                        }`}\r\n                        alt={movie.name}\r\n                     />\r\n                  )\r\n            )}\r\n            <button\r\n               className={\r\n                  isLargeRow\r\n                     ? \"slide__right slide__right__large\"\r\n                     : \"slide__right\"\r\n               }\r\n               onClick={() => {\r\n                  document.querySelector(\r\n                     `.row_${rowNumber}`\r\n                  ).scrollLeft += 1000;\r\n               }}\r\n            >\r\n               <i className=\"fas fa-arrow-right\"></i>\r\n            </button>\r\n         </div>\r\n         {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Row;\r\n","let API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst requests = {\r\n   fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n   fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n   fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=-en-US`,\r\n   fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n   fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n   fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n   fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n   fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./../../axios\";\r\nimport requests from \"./../../requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n   const [movie, setMovie] = useState([]);\r\n\r\n   useEffect(() => {\r\n      async function fetchData() {\r\n         const req = await axios.get(requests.fetchNetflixOriginals);\r\n         setMovie(\r\n            req.data.results[\r\n               Math.floor(Math.random() * req.data.results.length - 1)\r\n            ]\r\n         );\r\n         return req;\r\n      }\r\n      fetchData();\r\n   }, []);\r\n\r\n   function truncate(str, n) {\r\n      return str?.lengt > n ? str.substr(0, n - 1) + \"...\" : str;\r\n   }\r\n\r\n   return (\r\n      <header\r\n         className=\"banner\"\r\n         style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n         }}\r\n      >\r\n         <div className=\"banner__contents\">\r\n            {/* title */}\r\n            <h1 className=\"banner__title\">\r\n               {movie?.title || movie?.name || movie?.original_name}\r\n            </h1>\r\n\r\n            {/* Buttons */}\r\n            <div className=\"banner_buttons\">\r\n               <button className=\"banner__button\">Play</button>\r\n               <button className=\"banner__button\">My List</button>\r\n            </div>\r\n\r\n            {/* Descriptions */}\r\n            <h1 className=\"banner__description\">{movie?.overview}</h1>\r\n         </div>\r\n         <div className=\"banner__fadeBottom\"></div>\r\n      </header>\r\n   );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n   const [show, handleShow] = useState(false);\r\n\r\n   useEffect(() => {\r\n      window.addEventListener(\"scroll\", () => {\r\n         if (window.scrollY > 100) {\r\n            handleShow(true);\r\n         } else handleShow(false);\r\n      });\r\n      return () => {\r\n         window.removeEventListener(\"scroll\");\r\n      };\r\n   }, []);\r\n   return (\r\n      <nav className={`${show && \"nav__black\"}`}>\r\n         <img\r\n            className=\"nav__logo\"\r\n            src=\"https://cdn.worldvectorlogo.com/logos/netflix-3.svg\"\r\n            alt=\"Netflix Logo\"\r\n         />\r\n         <img\r\n            className=\"nav__avatar\"\r\n            src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n            alt=\"Profile Avatar\"\r\n         />\r\n      </nav>\r\n   );\r\n}\r\n\r\nexport default Navbar;\r\n","// React Imports\r\nimport React from \"react\";\r\n\r\n// CSS imports\r\nimport \"./App.css\";\r\n\r\n// Component imports\r\nimport { Row, Banner, Navbar } from \"./Components/exports\";\r\n\r\n// request import\r\nimport requests from \"./requests\";\r\n\r\n// App Component\r\nfunction App() {\r\n   return (\r\n      <div className=\"app\">\r\n         {/* Nav */}\r\n         <Navbar />\r\n\r\n         {/* Banner */}\r\n         <Banner />\r\n\r\n         {/* Rows */}\r\n         <Row\r\n            title=\"NETFLIX ORIGINALS\"\r\n            fetchUrl={requests.fetchNetflixOriginals}\r\n            isLargeRow\r\n         />\r\n         <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n         <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n         <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n         <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n         <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n         <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n      <App />\r\n   </React.StrictMode>,\r\n   document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}